{"version":3,"sources":["img/veg-icon.png","img/meal-prep.png","App.js","index.js"],"names":["publicSpreadsheetURL","App","useState","data","setData","currRecipe","setCurrRecipe","hasRecipeLink","Recipe","startsWith","useEffect","Tabletop","init","key","simpleSheet","then","elements","catch","err","console","warn","setRandomRecipe","useCallback","randomIndex","Math","floor","random","length","className","href","target","rel","onClick","hasCuisine","Cuisine","hasIngredients","Ingredients","hasNotes","Notes","mealPrepFriendly","vegetarianOnly","Vegetarian","Vegan","vegan","showDetails","Name","src","MealPrepIcon","alt","VegIcon","getRecipeContent","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,MAA0B,qCCA1B,MAA0B,sC,eCMnCA,EACJ,uGA4KaC,MA1Kf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EACJF,GACAA,EAAWG,SACVH,EAAWG,OAAOC,WAAW,SAC5BJ,EAAWG,OAAOC,WAAW,QAGjCC,qBAAU,WACRC,IAASC,KAAK,CACZC,IAAKb,EACLc,aAAa,IAEZC,MAAK,SAACZ,GAAD,OAAUC,EAAQD,EAAK,mBAAmBa,aAC/CC,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAKF,QAC9B,IAGH,IAAMG,EAAkBC,uBAAY,WAClC,IAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWvB,EAAKwB,QAChDxB,EAAKwB,OAAS,GAChBrB,EAAcH,EAAKoB,MAEpB,CAACpB,IA4FJ,OAzFAO,qBAAU,WACRW,MACC,CAAClB,EAAMkB,IAwFR,sBAAKO,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,mCACE,yDACA,8DACgC,IAC9B,mBACEC,KAAM7B,EACN8B,OAAO,SACPC,IAAI,sBAHN,8BAMK,IARP,4CAS4C,IAC1C,mBACEF,KAAK,wDACLC,OAAO,SACPC,IAAI,sBAHN,oBAVF,mFAsBF,wBAAQH,UAAU,UAAUI,QAASX,EAArC,iCAhHmB,WACvB,GAAIhB,EAAY,CACd,IAAM4B,EAAoC,KAAvB5B,EAAW6B,QACxBC,EAA4C,KAA3B9B,EAAW+B,YAC5BC,EAAgC,KAArBhC,EAAWiC,MAEtBC,EAAqD,QAAlClC,EAAW,mBAC9BmC,EACsB,QAA1BnC,EAAWoC,YAA6C,QAArBpC,EAAWqC,MAC1CC,EAA6B,QAArBtC,EAAWqC,MACnBE,EACJP,GAAYE,GAAoBC,GAAkBG,EAEpD,OACE,qCACE,6BAAKtC,EAAWwC,OAEhB,4BACGtC,EACC,mBACEsB,KAAMxB,EAAWG,OACjBsB,OAAO,SACPC,IAAI,sBAHN,yBADY,4DASyC1B,EAAWG,OATpD,OAafyB,GACC,qCACE,yCACA,4BAAI5B,EAAW6B,aAIlBC,GACC,qCACE,iDACA,4BAAI9B,EAAW+B,iBAIlBQ,GACC,qCACE,yCACCP,GACC,8BACE,gDADF,WAEOhC,EAAWiC,UAGpB,sBAAKV,UAAU,gBAAf,UACGW,GACC,sBAAKX,UAAU,YAAf,UACE,qBACEkB,IAAKC,EACLnB,UAAU,OACVoB,IAAI,mBAJR,yBASAR,GAAkBG,IAClB,sBAAKf,UAAU,YAAf,UACE,qBACEkB,IAAKG,EACLrB,UAAU,WACVoB,IAAI,oBAELR,EAAiB,aAAe,oBAUjD,OAAO,KAkCFU,MAGH,qBAAKtB,UAAU,gBAAf,SACGrB,EACC,wBACEuC,IAAKzC,EAAWG,OAChB2C,MAAM,iBACNvB,UAAU,UAHZ,SAKE,wEAGF,qBAAKA,UAAU,eAAf,SACE,8DCvKZwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a78bc529.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/veg-icon.d159639d.png\";","export default __webpack_public_path__ + \"static/media/meal-prep.3913a584.png\";","import { useEffect, useState, useCallback } from \"react\";\r\nimport Tabletop from \"tabletop\";\r\nimport VegIcon from \"./img/veg-icon.png\";\r\nimport MealPrepIcon from \"./img/meal-prep.png\";\r\nimport \"./App.scss\";\r\n\r\nconst publicSpreadsheetURL =\r\n  \"https://docs.google.com/spreadsheets/d/1dXL6Ej3IREf2VLDP3zs-6QCwhfLphzsbxUmqekCri3c/edit?usp=sharing\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [currRecipe, setCurrRecipe] = useState();\r\n  const hasRecipeLink =\r\n    currRecipe &&\r\n    currRecipe.Recipe &&\r\n    (currRecipe.Recipe.startsWith(\"http\") ||\r\n      currRecipe.Recipe.startsWith(\"www\"));\r\n\r\n  // Fetch data on load\r\n  useEffect(() => {\r\n    Tabletop.init({\r\n      key: publicSpreadsheetURL,\r\n      simpleSheet: false,\r\n    })\r\n      .then((data) => setData(data[\"Lunches/Dinners\"].elements))\r\n      .catch((err) => console.warn(err));\r\n  }, []);\r\n\r\n  // Choose a random recipe\r\n  const setRandomRecipe = useCallback(() => {\r\n    const randomIndex = Math.floor(Math.random() * data.length);\r\n    if (data.length > 0) {\r\n      setCurrRecipe(data[randomIndex]);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set the current recipe once data has loaded\r\n  useEffect(() => {\r\n    setRandomRecipe();\r\n  }, [data, setRandomRecipe]);\r\n\r\n  const getRecipeContent = () => {\r\n    if (currRecipe) {\r\n      const hasCuisine = currRecipe.Cuisine !== \"\";\r\n      const hasIngredients = currRecipe.Ingredients !== \"\";\r\n      const hasNotes = currRecipe.Notes !== \"\";\r\n\r\n      const mealPrepFriendly = currRecipe[\"Meal preps well\"] === \"Yes\";\r\n      const vegetarianOnly =\r\n        currRecipe.Vegetarian === \"Yes\" && currRecipe.Vegan !== \"Yes\"; // only show if not also vegan\r\n      const vegan = currRecipe.Vegan === \"Yes\";\r\n      const showDetails =\r\n        hasNotes || mealPrepFriendly || vegetarianOnly || vegan;\r\n\r\n      return (\r\n        <>\r\n          <h2>{currRecipe.Name}</h2>\r\n\r\n          <p>\r\n            {hasRecipeLink ? (\r\n              <a\r\n                href={currRecipe.Recipe}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Recipe link\r\n              </a>\r\n            ) : (\r\n              `There's no link for this. Check out the cookbook: ${currRecipe.Recipe}.`\r\n            )}\r\n          </p>\r\n\r\n          {hasCuisine && (\r\n            <>\r\n              <h3>Cuisine</h3>\r\n              <p>{currRecipe.Cuisine}</p>\r\n            </>\r\n          )}\r\n\r\n          {hasIngredients && (\r\n            <>\r\n              <h3>Key Ingredients</h3>\r\n              <p>{currRecipe.Ingredients}</p>\r\n            </>\r\n          )}\r\n\r\n          {showDetails && (\r\n            <>\r\n              <h3>Details</h3>\r\n              {hasNotes && (\r\n                <p>\r\n                  <b>Alayna's Notes:</b>\r\n                  {` ${currRecipe.Notes}`}\r\n                </p>\r\n              )}\r\n              <div className=\"iconContainer\">\r\n                {mealPrepFriendly && (\r\n                  <div className=\"iconGroup\">\r\n                    <img\r\n                      src={MealPrepIcon}\r\n                      className=\"icon\"\r\n                      alt=\"Meal prep icon\"\r\n                    />\r\n                    Meal prep friendly\r\n                  </div>\r\n                )}\r\n                {(vegetarianOnly || vegan) && (\r\n                  <div className=\"iconGroup\">\r\n                    <img\r\n                      src={VegIcon}\r\n                      className=\"icon veg\"\r\n                      alt=\"Vegetarian icon\"\r\n                    />\r\n                    {vegetarianOnly ? \"Vegetarian\" : \"Vegan\"}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"recipeData\">\r\n        <header>\r\n          <h1>Random Recipe Generator</h1>\r\n          <p>\r\n            This generator is based on my{\" \"}\r\n            <a\r\n              href={publicSpreadsheetURL}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Alayna's Recipes\r\n            </a>{\" \"}\r\n            spreadsheet. Check out the source code on{\" \"}\r\n            <a\r\n              href=\"https://github.com/atruttmann/Random-Recipe-Generator\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              GitHub\r\n            </a>\r\n            . Note that some recipe websites do not allow previewing within this\r\n            site.\r\n          </p>\r\n        </header>\r\n\r\n        <button className=\"refresh\" onClick={setRandomRecipe}>\r\n          Generate new recipe\r\n        </button>\r\n\r\n        {getRecipeContent()}\r\n      </div>\r\n\r\n      <div className=\"recipePreview\">\r\n        {hasRecipeLink ? (\r\n          <iframe\r\n            src={currRecipe.Recipe}\r\n            title=\"Recipe preview\"\r\n            className=\"preview\"\r\n          >\r\n            <p>Your browser does not support iframe.</p>\r\n          </iframe>\r\n        ) : (\r\n          <div className=\"preview none\">\r\n            <p>No preview available.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}